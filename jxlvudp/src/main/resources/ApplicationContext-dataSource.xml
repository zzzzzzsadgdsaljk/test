<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="kesun.dao.*.impl;kesun.bll.*.impl">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"></context:include-filter>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"></context:include-filter>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>
    <!-- 配置阿里 druid数据源连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialSize" value="${jdbc.initialSize}" />
        <property name="minIdle" value="${jdbc.minIdle}" />
        <property name="maxActive" value="${jdbc.maxActive}" />
        <property name="maxWait" value="${jdbc.maxWait}" />
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
        <property name="validationQuery" value="${jdbc.validationQuery}" />
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
        <property name="testOnReturn" value="${jdbc.testOnReturn}" />
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />

        <property name="filters" value="${jdbc.filters}" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />

    </bean>
    <bean id="transfactory" class="org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory">

    </bean>
    <!-- 配置mybatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 自动扫描映射文件目录-->
        <property name="mapperLocations">
            <array>
                <value>classpath*:/mapper/*.xml</value>
                <value>classpath*:/mapper/asset/*.xml</value>
                <value>classpath*:/mapper/educationBaseInfo/*.xml</value>
                <value>classpath*:/mapper/system/*.xml</value>
                <value>classpath*:/mapper/techIndex/*.xml</value>
                <value>classpath*:/mapper/web/*.xml</value>
                <value>classpath*:/mapper/exam/*.xml</value>
                <value>classpath*:/mapper/certificate/*.xml</value>
            </array>
        </property>
    </bean>

    <!-- sql会话模版 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>
          <!-- 自动扫描dao目录-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <property name="basePackage" value="kesun.dao"/>
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

<!-- 定义事务管理器-->
    <bean id="transactionManager" name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- aop切面事务-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 事务传播性，隔离级别级回滚-->
        <tx:attributes>
            <tx:method name="batchSave*" propagation="REQUIRED" read-only="false"
                rollback-for="java.lang.Exception"/>
            <tx:method name="save*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="*Insert" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="batchDelete" propagation="REQUIRED" read-only="false"
                rollback-for="java.lang.Exception"/>
            <tx:method name="delete" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="*Delete" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="batchUpdate*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                rollback-for="java.lang.Exception"/>
            <tx:method name="*Update" propagation="REQUIRED" read-only="false"
            rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <!-- 配置事务切点-->
        <aop:pointcut id="pt" expression="execution(* kesun.dao.asset.*.*(..)) or execution(* kesun.dao.techIndex.inter.*.*(..)) or execution(* kesun.dao.exam.inter.*.*(..))"/>
        <!-- 将txAdvice注入切点-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>
    </aop:config>
</beans>