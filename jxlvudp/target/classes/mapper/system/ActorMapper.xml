<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.ActorMapper">
    <resultMap id="BaseResultMap" type="kesun.entity.system.Actor">
        <id column="id"  property="id" />
        <result column="name" property="name" />
        <result column="name" property="text" />
        <result column="createDate" property="createDate" />
        <result column="status" property="status" />
        <result column="description" property="description" />
        <association property="parent" javaType="kesun.entity.system.Actor">
            <id column="parent"  property="id" jdbcType="VARCHAR" javaType="java.lang.String" />
        </association>
        <association property="type" javaType="kesun.entity.system.ActorType">
            <id column="type" property="id"></id>
            <result column="typeName" property="name" />
        </association>
        <association property="isPower" select="isExistPower" column="id">

        </association>
    </resultMap>
    <sql id="Base_Column_List">
        id, name, createDate, status, parent,description,type,typeName,org,orgName
    </sql>
    <sql id="actorpower_list">
        id, name,address,status,actorID,actorName
    </sql>

    <insert id="insert" parameterType="kesun.entity.system.Actor">
        insert into actor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id, name, createDate,
            status, type,description,
            <if test="parent != null">
                parent,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
            #{status,jdbcType=VARCHAR}, #{type.id,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
            <if test="parent != null">
                #{parent.id,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKey" parameterType="kesun.entity.system.Actor">
        update Actor
        set
        <trim suffixOverrides=",">
            id=#{id,jdbcType=VARCHAR},name = #{name,jdbcType=VARCHAR},
            <if test="parent!=null">
                parent=#{parent.id,jdbcType=VARCHAR},
            </if>
            type=#{type.id,jdbcType=VARCHAR},
            status=#{status,jdbcType=VARCHAR},
            description=#{description,jdbcType=VARCHAR},
        </trim>
        where id = #{oldId,jdbcType=VARCHAR}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from actor
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from vwActor
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <select id="selectForObject" parameterType="java.util.Map"  resultMap="BaseResultMap">
        select *
        from vwActor
        <where>
            <if test='parent!=null and parent!="" and parent!="0"'>
            parent=#{parent,jdbcType=VARCHAR} AND
            </if>
            <if test='ids!=null and ids.size()>0'>
                id in
                <foreach  collection="ids" index="index" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>  AND
            </if>
            name like '%${name}%'  order by name ASC
        </where>
    </select>
    <select id="selectForMap" parameterType="java.util.Map"  resultType="java.util.Map">
        select <include refid="Base_Column_List" />
        from vwActor
        <where>
            <if test='parent!=null and parent!="" and parent!="0"'>
                parent=#{parent,jdbcType=VARCHAR} AND
            </if>
           name like '%${name}%'  order by name ASC
        </where>

    </select>
    <select id="findByPage" parameterType="java.util.Map"  resultType="java.util.Map">
        select <include refid="Base_Column_List" />
        from vwActor where name like '%${name}%'  order by name ASC
        <if test="start !=0 or limit!=0">
            limit #{start},#{limit}</if>
    </select>
    <!--判断角色使用在使用中-->
    <select id="findActorInUse" parameterType="java.lang.String" resultType="java.util.Map">
        select id from usermapactor where actorid=#{id,jdbcType=VARCHAR}
    </select>
    <!--判断当前角色是否存在授权-->
    <select id="isExistPower" parameterType="java.lang.String" resultType="boolean">
        <![CDATA[ select count(id) from actorpowersheet where actorid=#{id} ]]>
    </select>
    <!--角色权限相关操作-->
    <insert id="setPower" parameterType="java.util.Map">
        insert into actorpowersheet
        (id,name,createDate,actorID,systemMenuID,status)
        VALUES
        (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},#{createDate,jdbcType=TIMESTAMP},#{actorID,jdbcType=VARCHAR},#{systemMenuID,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR} );
    </insert>


    <!--根据角色的ID查找权限-->
    <select id="getPower" parameterType="java.util.Map" resultMap="mapper.SystemMenuMapper.BaseResultMap" >
        select <include refid="actorpower_list" />
        from vwactormappower
        <where>
                actorID in
                <foreach  collection="ids" index="index" item="id" open="(" separator="," close=")">
                    #{id}
                </foreach>
        </where>
    </select>

    <!--删除指定角色的授权-->
    <delete id="removePower" parameterType="java.util.Map">
        delete from actorpowersheet
        <where>
            actorID IN
            <foreach  collection="ids" index="index" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </where>
    </delete>
</mapper>